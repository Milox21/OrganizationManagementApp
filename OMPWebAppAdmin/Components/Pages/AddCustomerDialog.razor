@using ClassLibrary.DTO
@using OMPWebAppAdmin.Services

@inject DialogService DialogService
@inject ApiConnectionService<CustomerDTO> ApiServiceCustomer


<RadzenTemplateForm TItem="CustomerDTO" Data="@customer" Submit="@SaveCustomer" Style="padding: 20px;">
    <RadzenFieldset Legend="Customer Details">
        <RadzenLabel Text="Name" />
        <RadzenTextBox @bind-Value="customer.Name" Placeholder="Enter customer name" Style="width: 100%;" />

        <!-- Customer Creation Date -->
        <RadzenLabel Text="Company Universal Password" Style="margin-top: 10px;" />
        <RadzenTextBox @bind-Value="customer.Password" Placeholder="Enter CUP"  Style="width: 100%;" />
    </RadzenFieldset>

    <!-- Submit and Cancel Buttons -->
    <div style="text-align: center; margin-top: 20px;">
        <RadzenButton Text="Save" ButtonType="ButtonType.Submit" Style="margin-right: 10px; background-color: #0078D7; color: white;" />
        <RadzenButton Text="Cancel" Click="@((args) => DialogService.Close(false))" ButtonStyle="ButtonStyle.Secondary" />
    </div>
</RadzenTemplateForm>


@code {
    private CustomerDTO customer = new CustomerDTO();

    private async Task SaveCustomer()
    {
        customer.IsDeleted = false;
        customer.CreationDate = DateTime.Now;

        //TODO api connection 
        await ApiServiceCustomer.PostResource("/api/Customer/", customer);

        DialogService.Close(false);
    }
}
