@* @using ClassLibrary.DTO *@
@* @inject ApiConnectionService<GroupMessageDTO> ChatService *@

@* <div class="chat-box"> *@
@*     <div class="messages"> *@
@*         @if (messages != null) *@
@*         { *@
@*             @foreach (var msg in messages) *@
@*             { *@
@*                 <div class="chat-message"> *@
@*                     <b>@msg.Username:</b> @msg.Message *@
@*                 </div> *@
@*             } *@
@*         } *@
@*     </div> *@

@*     <div class="chat-input"> *@
@*         <RadzenTextBox @bind-Value="newMessage" Placeholder="Type a message..." Style="width: 100%;" /> *@
@*         <RadzenButton Icon="send" Style="margin-left: 10px;" Click="SendMessage" /> *@
@*     </div> *@
@* </div> *@

@* @code { *@
@*     [Parameter] public int GroupId { get; set; } *@
@*     [Parameter] public int TaskId { get; set; } *@

@*     private List<GroupMessageDTO> messages = new(); *@
@*     private string newMessage = ""; *@

@*     protected override async Task OnInitializedAsync() *@
@*     { *@
@*         await LoadMessages(); *@
@*     } *@

@*     private async Task LoadMessages() *@
@*     { *@
@*         messages = await ChatService.GetResources($"/api/GroupMessage/ByTask/{TaskId}"); *@
@*     } *@

@*     private async Task SendMessage() *@
@*     { *@
@*         if (!string.IsNullOrWhiteSpace(newMessage)) *@
@*         { *@
@*             var message = new GroupMessageDTO *@
@*                 { *@
@*                     GroupId = GroupId, *@
@*                     TaskId = TaskId, *@
@*                     Message = newMessage, *@
@*                     Timestamp = DateTime.Now, *@
@*                     UserId = 123, // Replace with actual logged-in user ID *@
@*                     Username = "You" // Optional, for display only *@
@*                 }; *@

@*             await ChatService.PostResource("/api/GroupMessage", message); *@
@*             newMessage = ""; *@
@*             await LoadMessages(); *@
@*         } *@
@*     } *@
@* } *@
