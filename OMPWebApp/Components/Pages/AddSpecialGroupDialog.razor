@using ClassLibrary.DTO
@using OMPWebApp.Services

@inject DialogService DialogService
@inject AuthorizationService AuthService
@inject ApiConnectionService<SpecialGroupDTO> ASGroup


<RadzenTemplateForm TItem="SpecialGroupDTO" Data="@group" Submit="@SaveItem" Style="padding: 20px;">

    <RadzenFieldset Legend="Group Details">
        <RadzenLabel Text="Title" />
        <RadzenTextBox @bind-Value="group.Title" Placeholder="Enter group name" Style="width: 100%;" />

        <RadzenLabel Text="Address" Style="margin-top: 10px;" />
        <RadzenTextBox @bind-Value="group.Description" Placeholder="Enter description" Style="width: 100%;" />
    </RadzenFieldset>

    <!-- Submit and Cancel Buttons -->
    <div style="text-align: center; margin-top: 20px;">
        <RadzenButton Text="Save" ButtonType="ButtonType.Submit" Style="margin-right: 10px; background-color: #0078D7; color: white;" />
        <RadzenButton Text="Cancel" Click="@((args) => DialogService.Close(false))" ButtonStyle="ButtonStyle.Secondary" />
    </div>
</RadzenTemplateForm>


@code {
    private SpecialGroupDTO group = new();

    private async Task SaveItem()
    {
        group.IsDeleted = false;
        group.CustomerId = AuthService.userDTO.CustomerId;
        group.CreationDate = DateTime.Now;

        await ASGroup.PostResource("/api/SpecialGroup/", group);

        DialogService.Close(false);
    }
}
