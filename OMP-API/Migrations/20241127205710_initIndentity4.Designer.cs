// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OMP_API.Models.Contexts;

#nullable disable

namespace OMP_API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241127205710_initIndentity4")]
    partial class initIndentity4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OMP_API.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("PK__Admins__3213E83FFADA5D77");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("OMP_API.Models.ContractType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BaseRatePerHourBrutto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("baseRatePerHourBrutto");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK__Contract__3213E83F5815878A");

                    b.HasIndex("CustomerId");

                    b.ToTable("ContractTypes");
                });

            modelBuilder.Entity("OMP_API.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Country__3213E83F881D31EE");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("OMP_API.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<decimal>("ExchangeRateToDollar")
                        .HasColumnType("decimal(10, 4)")
                        .HasColumnName("exchangeRateToDollar");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.HasKey("Id")
                        .HasName("PK__Currenci__3213E83F918EF608");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("OMP_API.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("PK__Customer__3213E83FBA8D94FA");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("OMP_API.Models.DebitNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("currency");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("PK__DebitNot__3213E83F09677558");

                    b.HasIndex("CustomerId");

                    b.ToTable("DebitNote");
                });

            modelBuilder.Entity("OMP_API.Models.Error", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("text");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("topic");

                    b.HasKey("Id")
                        .HasName("PK__Errors__3213E83F74876A49");

                    b.HasIndex("CustomerId");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("OMP_API.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Groups__3213E83FD3834658");

                    b.HasIndex("CustomerId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("OMP_API.Models.GroupMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("groupId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("text");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__GroupMes__3213E83FF4260B8C");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupMessages");
                });

            modelBuilder.Entity("OMP_API.Models.GroupsUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("groupId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit")
                        .HasColumnName("isOwner");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__GroupsUs__3213E83F1A74F4EA");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupsUsers");
                });

            modelBuilder.Entity("OMP_API.Models.ImageInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("filePath");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__ImageInp__3213E83F11FB439D");

                    b.ToTable("ImageInput");
                });

            modelBuilder.Entity("OMP_API.Models.InvoiceCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<decimal>("PriceNetto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("priceNetto");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("quantity");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unit");

                    b.Property<decimal?>("ValueBrutto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valueBrutto");

                    b.Property<decimal>("ValueNetto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valueNetto");

                    b.Property<int?>("VatTax")
                        .HasColumnType("int")
                        .HasColumnName("vatTax");

                    b.Property<decimal?>("VatTaxValue")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("vatTaxValue");

                    b.HasKey("Id")
                        .HasName("PK__InvoiceC__3213E83F4730B068");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VatTax");

                    b.ToTable("InvoiceCost");
                });

            modelBuilder.Entity("OMP_API.Models.InvoiceIncome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<decimal>("PriceNetto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("priceNetto");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("quantity");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unit");

                    b.Property<decimal?>("ValueBrutto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valueBrutto");

                    b.Property<decimal>("ValueNetto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valueNetto");

                    b.Property<int?>("VatTax")
                        .HasColumnType("int")
                        .HasColumnName("vatTax");

                    b.Property<decimal?>("VatTaxValue")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("vatTaxValue");

                    b.HasKey("Id")
                        .HasName("PK__InvoiceI__3213E83F6F4DA711");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VatTax");

                    b.ToTable("InvoiceIncome");
                });

            modelBuilder.Entity("OMP_API.Models.InvoiceTaxRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(10, 4)")
                        .HasColumnName("rate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK__InvoiceT__3213E83FF2C8D260");

                    b.HasIndex("CustomerId");

                    b.ToTable("InvoiceTaxRates");
                });

            modelBuilder.Entity("OMP_API.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit")
                        .HasColumnName("isSeen");

                    b.Property<string>("NotificationSource")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("notificationSource");

                    b.Property<string>("NotificationText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notificationText");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3213E83F1C8EAB56");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("OMP_API.Models.NotificationsSubscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("NotificationSource")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("notificationSource");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3213E83F5BD0CE61");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationsSubscribers");
                });

            modelBuilder.Entity("OMP_API.Models.Payroll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContractType")
                        .HasColumnType("int")
                        .HasColumnName("contractType");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("hours");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PayrollTaxRateIds")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("payrollTaxRateIds");

                    b.Property<decimal>("RatePerHourBrutto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("ratePerHourBrutto");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("PK__Payroll__3213E83F7EDFC64D");

                    b.HasIndex("ContractType");

                    b.HasIndex("CustomerId");

                    b.ToTable("Payroll");
                });

            modelBuilder.Entity("OMP_API.Models.PayrollTaxRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(10, 4)")
                        .HasColumnName("rate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__PayrollT__3213E83F578F27D2");

                    b.HasIndex("CustomerId");

                    b.ToTable("PayrollTaxRates");
                });

            modelBuilder.Entity("OMP_API.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Position__3213E83FFD67D6A3");

                    b.HasIndex("CustomerId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("OMP_API.Models.PrivateMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("text");

                    b.Property<int>("UserRecipientId")
                        .HasColumnType("int")
                        .HasColumnName("userRecipientId");

                    b.Property<int>("UserSenderId")
                        .HasColumnType("int")
                        .HasColumnName("userSenderId");

                    b.HasKey("Id")
                        .HasName("PK__PrivateM__3213E83F60C30931");

                    b.HasIndex("UserRecipientId");

                    b.HasIndex("UserSenderId");

                    b.ToTable("PrivateMessages");
                });

            modelBuilder.Entity("OMP_API.Models.ReccuringCostInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("frequency");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("invoiceId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<DateTime>("NextDueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("nextDueDate");

                    b.HasKey("Id")
                        .HasName("PK__Reccurin__3213E83F4D6AC24D");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("ReccuringCostInvoice");
                });

            modelBuilder.Entity("OMP_API.Models.ReccuringIncomeInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("frequency");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("invoiceId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<DateTime>("NextDueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("nextDueDate");

                    b.HasKey("Id")
                        .HasName("PK__Reccurin__3213E83FA29DD903");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("ReccuringIncomeInvoice");
                });

            modelBuilder.Entity("OMP_API.Models.SpecialGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__SpecialG__3213E83FF1856CEF");

                    b.HasIndex("CustomerId");

                    b.ToTable("SpecialGroups");
                });

            modelBuilder.Entity("OMP_API.Models.SpecialGroupsTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<int>("SpecialGroupId")
                        .HasColumnType("int")
                        .HasColumnName("specialGroupId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__SpecialG__3213E83F03BD1DB8");

                    b.HasIndex("SpecialGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("SpecialGroupsTickets");
                });

            modelBuilder.Entity("OMP_API.Models.SpecialGroupsUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit")
                        .HasColumnName("isOwner");

                    b.Property<int>("SpecialGroupId")
                        .HasColumnType("int")
                        .HasColumnName("specialGroupId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__SpecialG__3213E83F9A09927F");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SpecialGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("SpecialGroupsUsers");
                });

            modelBuilder.Entity("OMP_API.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("completionTime");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("DeadlineTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deadlineTime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<bool>("IsMeeting")
                        .HasColumnType("bit")
                        .HasColumnName("isMeeting");

                    b.Property<DateTime?>("LateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("lateTime");

                    b.Property<int>("TaskRecipient")
                        .HasColumnType("int");

                    b.Property<int>("TaskSender")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Tasks__3213E83F81C74467");

                    b.HasIndex("TaskRecipient");

                    b.HasIndex("TaskSender");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("OMP_API.Models.TextInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("text");

                    b.HasKey("Id")
                        .HasName("PK__TextInpu__3213E83F91C0D28B");

                    b.ToTable("TextInput");
                });

            modelBuilder.Entity("OMP_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteDate");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("editDate");

                    b.Property<string>("IdentityUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("identityUserId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("positionId");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("PK__Users__3213E83FD3C01ED7");

                    b.HasIndex("CustomerId");

                    b.HasIndex("IdentityUserId")
                        .IsUnique();

                    b.HasIndex("PositionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OMP_API.Models.ContractType", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("ContractTypes")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__ContractT__custo__4A4E069C");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OMP_API.Models.DebitNote", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("DebitNotes")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__DebitNote__custo__603D47BB");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OMP_API.Models.Error", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("Errors")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Errors__customer__6EC0713C");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OMP_API.Models.Group", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("Groups")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Groups__customer__05A3D694");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OMP_API.Models.GroupMessage", b =>
                {
                    b.HasOne("OMP_API.Models.Group", "Group")
                        .WithMany("GroupMessages")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__GroupMess__group__214BF109");

                    b.HasOne("OMP_API.Models.User", "User")
                        .WithMany("GroupMessages")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__GroupMess__userI__2057CCD0");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OMP_API.Models.GroupsUser", b =>
                {
                    b.HasOne("OMP_API.Models.Group", "Group")
                        .WithMany("GroupsUsers")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__GroupsUse__group__1B9317B3");

                    b.HasOne("OMP_API.Models.User", "User")
                        .WithMany("GroupsUsers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__GroupsUse__userI__1A9EF37A");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OMP_API.Models.InvoiceCost", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("InvoiceCosts")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__InvoiceCo__custo__4F12BBB9");

                    b.HasOne("OMP_API.Models.InvoiceTaxRate", "VatTaxNavigation")
                        .WithMany("InvoiceCosts")
                        .HasForeignKey("VatTax")
                        .HasConstraintName("FK__InvoiceCo__vatTa__5006DFF2");

                    b.Navigation("Customer");

                    b.Navigation("VatTaxNavigation");
                });

            modelBuilder.Entity("OMP_API.Models.InvoiceIncome", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("InvoiceIncomes")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__InvoiceIn__custo__54CB950F");

                    b.HasOne("OMP_API.Models.InvoiceTaxRate", "VatTaxNavigation")
                        .WithMany("InvoiceIncomes")
                        .HasForeignKey("VatTax")
                        .HasConstraintName("FK__InvoiceIn__vatTa__55BFB948");

                    b.Navigation("Customer");

                    b.Navigation("VatTaxNavigation");
                });

            modelBuilder.Entity("OMP_API.Models.InvoiceTaxRate", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("InvoiceTaxRates")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__InvoiceTa__custo__40C49C62");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OMP_API.Models.Notification", b =>
                {
                    b.HasOne("OMP_API.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__userI__11158940");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OMP_API.Models.NotificationsSubscriber", b =>
                {
                    b.HasOne("OMP_API.Models.User", "User")
                        .WithMany("NotificationsSubscribers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__userI__15DA3E5D");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OMP_API.Models.Payroll", b =>
                {
                    b.HasOne("OMP_API.Models.ContractType", "ContractTypeNavigation")
                        .WithMany("Payrolls")
                        .HasForeignKey("ContractType")
                        .IsRequired()
                        .HasConstraintName("FK__Payroll__contrac__5B78929E");

                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("Payrolls")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Payroll__custome__5A846E65");

                    b.Navigation("ContractTypeNavigation");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OMP_API.Models.PayrollTaxRate", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("PayrollTaxRates")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__PayrollTa__custo__4589517F");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OMP_API.Models.Position", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("Positions")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Positions__custo__7B264821");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OMP_API.Models.PrivateMessage", b =>
                {
                    b.HasOne("OMP_API.Models.User", "UserRecipient")
                        .WithMany("PrivateMessageUserRecipients")
                        .HasForeignKey("UserRecipientId")
                        .IsRequired()
                        .HasConstraintName("FK__PrivateMe__userR__2704CA5F");

                    b.HasOne("OMP_API.Models.User", "UserSender")
                        .WithMany("PrivateMessageUserSenders")
                        .HasForeignKey("UserSenderId")
                        .IsRequired()
                        .HasConstraintName("FK__PrivateMe__userS__2610A626");

                    b.Navigation("UserRecipient");

                    b.Navigation("UserSender");
                });

            modelBuilder.Entity("OMP_API.Models.ReccuringCostInvoice", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("ReccuringCostInvoices")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Reccuring__custo__6501FCD8");

                    b.HasOne("OMP_API.Models.InvoiceCost", "Invoice")
                        .WithMany("ReccuringCostInvoices")
                        .HasForeignKey("InvoiceId")
                        .IsRequired()
                        .HasConstraintName("FK__Reccuring__invoi__65F62111");

                    b.Navigation("Customer");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("OMP_API.Models.ReccuringIncomeInvoice", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("ReccuringIncomeInvoices")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Reccuring__custo__6ABAD62E");

                    b.HasOne("OMP_API.Models.InvoiceIncome", "Invoice")
                        .WithMany("ReccuringIncomeInvoices")
                        .HasForeignKey("InvoiceId")
                        .IsRequired()
                        .HasConstraintName("FK__Reccuring__invoi__6BAEFA67");

                    b.Navigation("Customer");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("OMP_API.Models.SpecialGroup", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("SpecialGroups")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__SpecialGr__custo__2BC97F7C");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OMP_API.Models.SpecialGroupsTicket", b =>
                {
                    b.HasOne("OMP_API.Models.SpecialGroup", "SpecialGroup")
                        .WithMany("SpecialGroupsTickets")
                        .HasForeignKey("SpecialGroupId")
                        .IsRequired()
                        .HasConstraintName("FK__SpecialGr__speci__382F5661");

                    b.HasOne("OMP_API.Models.User", "User")
                        .WithMany("SpecialGroupsTickets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__SpecialGr__userI__373B3228");

                    b.Navigation("SpecialGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OMP_API.Models.SpecialGroupsUser", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("SpecialGroupsUsers")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__SpecialGr__custo__308E3499");

                    b.HasOne("OMP_API.Models.SpecialGroup", "SpecialGroup")
                        .WithMany("SpecialGroupsUsers")
                        .HasForeignKey("SpecialGroupId")
                        .IsRequired()
                        .HasConstraintName("FK__SpecialGr__speci__318258D2");

                    b.HasOne("OMP_API.Models.User", "User")
                        .WithMany("SpecialGroupsUsers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__SpecialGr__userI__32767D0B");

                    b.Navigation("Customer");

                    b.Navigation("SpecialGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OMP_API.Models.Task", b =>
                {
                    b.HasOne("OMP_API.Models.User", "TaskRecipientNavigation")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskRecipient")
                        .IsRequired()
                        .HasConstraintName("FK__Tasks__TaskRecip__0A688BB1");

                    b.HasOne("OMP_API.Models.Group", "TaskSenderNavigation")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskSender")
                        .IsRequired()
                        .HasConstraintName("FK__Tasks__TaskSende__0B5CAFEA");

                    b.Navigation("TaskRecipientNavigation");

                    b.Navigation("TaskSenderNavigation");
                });

            modelBuilder.Entity("OMP_API.Models.User", b =>
                {
                    b.HasOne("OMP_API.Models.Customer", "Customer")
                        .WithMany("Users")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Users__customerI__7FEAFD3E");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithOne()
                        .HasForeignKey("OMP_API.Models.User", "IdentityUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Users__IdentityUser");

                    b.HasOne("OMP_API.Models.Position", "Position")
                        .WithMany("Users")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK__Users__positionI__00DF2177");

                    b.Navigation("Customer");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("OMP_API.Models.ContractType", b =>
                {
                    b.Navigation("Payrolls");
                });

            modelBuilder.Entity("OMP_API.Models.Customer", b =>
                {
                    b.Navigation("ContractTypes");

                    b.Navigation("DebitNotes");

                    b.Navigation("Errors");

                    b.Navigation("Groups");

                    b.Navigation("InvoiceCosts");

                    b.Navigation("InvoiceIncomes");

                    b.Navigation("InvoiceTaxRates");

                    b.Navigation("PayrollTaxRates");

                    b.Navigation("Payrolls");

                    b.Navigation("Positions");

                    b.Navigation("ReccuringCostInvoices");

                    b.Navigation("ReccuringIncomeInvoices");

                    b.Navigation("SpecialGroups");

                    b.Navigation("SpecialGroupsUsers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("OMP_API.Models.Group", b =>
                {
                    b.Navigation("GroupMessages");

                    b.Navigation("GroupsUsers");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("OMP_API.Models.InvoiceCost", b =>
                {
                    b.Navigation("ReccuringCostInvoices");
                });

            modelBuilder.Entity("OMP_API.Models.InvoiceIncome", b =>
                {
                    b.Navigation("ReccuringIncomeInvoices");
                });

            modelBuilder.Entity("OMP_API.Models.InvoiceTaxRate", b =>
                {
                    b.Navigation("InvoiceCosts");

                    b.Navigation("InvoiceIncomes");
                });

            modelBuilder.Entity("OMP_API.Models.Position", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("OMP_API.Models.SpecialGroup", b =>
                {
                    b.Navigation("SpecialGroupsTickets");

                    b.Navigation("SpecialGroupsUsers");
                });

            modelBuilder.Entity("OMP_API.Models.User", b =>
                {
                    b.Navigation("GroupMessages");

                    b.Navigation("GroupsUsers");

                    b.Navigation("Notifications");

                    b.Navigation("NotificationsSubscribers");

                    b.Navigation("PrivateMessageUserRecipients");

                    b.Navigation("PrivateMessageUserSenders");

                    b.Navigation("SpecialGroupsTickets");

                    b.Navigation("SpecialGroupsUsers");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
